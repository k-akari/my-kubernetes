apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      labels:
        app: front
    spec:
      containers:
      - name: app
        image: 575428171781.dkr.ecr.ap-northeast-1.amazonaws.com/eks-app:latest
        resources:
          requests:
            memory: "64Mi"
            cpu: "200m"
          limits:
            memory: "128Mi"
            cpu: "400m"
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: dbname
      - name: web
        image: 575428171781.dkr.ecr.ap-northeast-1.amazonaws.com/eks-web:latest
        resources:
          requests:
            memory: "64Mi"
            cpu: "200m"
          limits:
            memory: "128Mi"
            cpu: "400m"
        ports: 
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: front-nodeport-service
spec:
  type: NodePort
  ports:
  - name: http-port
    protocol: TCP
    port: 8080
    targetPort: 80
  selector:
    app: front
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: front-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: front-nodeport-service
            port:
              number: 8080
